{"version":3,"sources":["routes/routes.ts","components/Header/Header.tsx","components/common/ErrorPages/Error404.tsx","store/actions/mainActions.ts","components/Main/Main.tsx","components/RoutesContainer/RoutesContainer.tsx","components/common/ErrorPages/ErrorAll.tsx","App.tsx","reportWebVitals.ts","store/reducers/mainReducer.ts","store/store.ts","index.tsx"],"names":["PATH","Header","MAIN_ACTIONS","Error404","to","MAIN","Main","RoutesContainer","path","element","ERROR","WRONG_PAGE","ErrorAll","error","useSelector","state","main","textError","dispatch","useDispatch","deleteMessageError","type","SET_ERROR_MESSAGE","setErrorMessage","useEffect","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialMainState","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IAAYA,E,qDCICC,EAAS,kBAA2B,0C,iBDJrCD,K,SAAAA,E,kCAAAA,E,YAAAA,E,gBAAAA,M,KEKL,ICLKE,EDKCC,EAAW,kBACtB,gCACE,4CACA,8BACE,cAAC,IAAD,CAASC,GAAIJ,EAAKK,KAAlB,gCEPOC,EAAO,kBAA2B,wCCOlCC,EAAkB,kBAC7B,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAMR,EAAKK,KAAMI,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAMR,EAAKU,MAAOD,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAMR,EAAKW,WAAYF,QAAS,cAAC,IAAD,CAAUL,GAAIJ,EAAKU,iB,SFdpDR,K,mDAAAA,M,KAML,IGEMU,EAAW,WACtB,IAAMC,EAAQC,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,SACnEI,EAAYH,aAAsC,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,aACtEC,EAAWC,cACXC,EAAqB,kBAAWF,EHNT,SAACL,EAAgBI,GAAjB,MAC5B,CACCI,KAAMnB,EAAaoB,kBACnBT,QACAI,aGE6CM,EAAgB,EAAO,MAMtE,OAJAC,qBAAU,WACRC,WAAWL,EAFA,OAGV,CAACP,IAGF,8BACGA,GACC,gCACE,wCACA,6BAAKI,UCfFS,EAAU,kBACrB,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCRRQ,EAAmB,CACvBvB,OAAO,EACPI,UAAW,ICEPoB,EAAcC,YAAgB,CAClCtB,KDEyB,WAGC,IAF1BD,EAEyB,uDAFKqB,EAC9BG,EACyB,uCACzB,OAAQA,EAAOlB,OACRnB,EAAaoB,kBACT,2BAAKP,GAAZ,IAAmBF,MAAO0B,EAAO1B,MAAOI,UAAWsB,EAAOtB,YAEnDF,KCNPyB,EAAmBC,OAAOC,sCAAwCC,IAC3DC,EAAQC,YAAYR,EAAaG,EAAiBM,YAAgBC,OCD/EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINO,SAASC,eAAe,SAG1BzB,M","file":"static/js/main.75a65f09.chunk.js","sourcesContent":["export enum PATH {\r\n  MAIN = '/',\r\n  RECOMMENDATIONS = 'recommendations',\r\n  ERROR = '404',\r\n  WRONG_PAGE = '*',\r\n}\r\n","import React from 'react';\r\n\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const Header = (): ReturnComponentType => <div>Header</div>;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport { PATH } from 'routes/routes';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const Error404 = (): ReturnComponentType => (\r\n  <div>\r\n    <div>Error 404</div>\r\n    <div>\r\n      <NavLink to={PATH.MAIN}>Back to home</NavLink>\r\n    </div>\r\n  </div>\r\n);\r\n","export enum MAIN_ACTIONS {\r\n  SET_ERROR_MESSAGE = 'mainReducer/SET-ERROR-MESSAGE',\r\n}\r\n\r\nexport type MainActionsType = ReturnType<typeof setErrorMessage>;\r\n\r\nexport const setErrorMessage = (error: boolean, textError: string) =>\r\n  ({\r\n    type: MAIN_ACTIONS.SET_ERROR_MESSAGE,\r\n    error,\r\n    textError,\r\n  } as const);\r\n","import { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const Main = (): ReturnComponentType => <div>Main</div>;\r\n","import React from 'react';\r\n\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\n\r\nimport { Error404 } from 'components/common/ErrorPages/Error404';\r\nimport { Main } from 'components/Main/Main';\r\nimport { PATH } from 'routes/routes';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const RoutesContainer = (): ReturnComponentType => (\r\n  <div>\r\n    <Routes>\r\n      <Route path={PATH.MAIN} element={<Main />} />\r\n      <Route path={PATH.ERROR} element={<Error404 />} />\r\n      <Route path={PATH.WRONG_PAGE} element={<Navigate to={PATH.ERROR} />} />\r\n    </Routes>\r\n  </div>\r\n);\r\n","import { useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { setErrorMessage } from 'store/actions/mainActions';\r\nimport { AppRootStateType } from 'store/store';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const ErrorAll = (): ReturnComponentType => {\r\n  const error = useSelector<AppRootStateType, boolean>(state => state.main.error);\r\n  const textError = useSelector<AppRootStateType, string>(state => state.main.textError);\r\n  const dispatch = useDispatch();\r\n  const deleteMessageError = (): any => dispatch(setErrorMessage(false, ''));\r\n  const time = 3000;\r\n  useEffect(() => {\r\n    setTimeout(deleteMessageError, time);\r\n  }, [error]);\r\n\r\n  return (\r\n    <div>\r\n      {error && (\r\n        <div>\r\n          <h1>Error:</h1>\r\n          <h2>{textError}</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { Header } from './components/Header/Header';\r\nimport { RoutesContainer } from './components/RoutesContainer/RoutesContainer';\r\n\r\nimport { ErrorAll } from 'components/common/ErrorPages/ErrorAll';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const App: FC = (): ReturnComponentType => (\r\n  <div>\r\n    <ErrorAll />\r\n    <Header />\r\n    <RoutesContainer />\r\n  </div>\r\n);\r\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { MAIN_ACTIONS, MainActionsType } from '../actions/mainActions';\r\n\r\nconst initialMainState = {\r\n  error: false,\r\n  textError: '',\r\n};\r\n\r\nexport type InitialMainStateType = typeof initialMainState;\r\n\r\nexport const mainReducer = (\r\n  state: InitialMainStateType = initialMainState,\r\n  action: MainActionsType,\r\n): InitialMainStateType => {\r\n  switch (action.type) {\r\n    case MAIN_ACTIONS.SET_ERROR_MESSAGE:\r\n      return { ...state, error: action.error, textError: action.textError };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\r\nimport thunk, { ThunkAction } from 'redux-thunk';\r\n\r\nimport { MainActionsType } from './actions/mainActions';\r\nimport { mainReducer } from './reducers/mainReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  main: mainReducer,\r\n});\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\nexport type AppActionsType = MainActionsType;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  AppRootStateType,\r\n  unknown,\r\n  AppActionsType\r\n>;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { store } from 'store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}