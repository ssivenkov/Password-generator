{"version":3,"sources":["components/CreatePassword/Settings/Settings.module.scss","components/Recommendations/Recommendations.module.scss","components/Header/Header.module.scss","components/CreatePassword/CreatePassword.module.scss","components/Footer/ContactButton/ContactButton.module.scss","components/Footer/Footer.module.scss","components/common/Checkbox/Checkbox.module.scss","components/RoutesContainer/RoutesContainer.module.scss","components/common/Button/Button.module.scss","App.module.scss","routes/routes.ts","components/Footer/ContactButton/ContactButton.tsx","components/Footer/Footer.tsx","components/Header/Header.tsx","store/actions/CreatePasswordActions.ts","components/common/ErrorPages/Error404.tsx","components/common/Checkbox/Checkbox.tsx","components/common/RangeSlider/RangeSlider.tsx","constants/common.ts","components/CreatePassword/Settings/Settings.tsx","components/common/Button/Button.tsx","components/CreatePassword/CreatePassword.tsx","components/Recommendations/Recommendations.tsx","components/RoutesContainer/RoutesContainer.tsx","components/common/ErrorPages/ErrorAll.tsx","App.tsx","reportWebVitals.ts","store/reducers/CreatePasswordReducer.ts","store/store.ts","index.tsx"],"names":["module","exports","PATH","ContactButton","link","iconClass","className","s","contactButton","href","target","rel","contactButtonIcon","Footer","style","container","contactsContainer","CREATE_PASSWORD_ACTIONS","Header","item","to","RECOMMENDATIONS","isActive","active","CREATE_PASSWORD","Error404","Checkbox","onChange","onChangeChecked","children","checked","disabled","finalInputClassName","checkbox","labelContainer","type","e","currentTarget","RangeSlider","props","state","start","startValue","this","min","max","step","onUpdate","range","animate","connect","React","Component","numbersArr","symbolsArr","uppercaseLettersArr","lowercaseLettersArr","setCopiedStatus","status","SET_COPIED_STATUS","Settings","checkboxCount","passwordLength","passwordUppercaseLetters","passwordLowercaseLetters","passwordNumbers","passwordSymbols","dispatch","useDispatch","checkboxDisable","onUppercaseLettersChange","uppercaseLetters","CHANGE_UPPERCASE_LETTERS","onLowercaseLettersChange","lowercaseLetters","CHANGE_LOWERCASE_LETTERS","onNumbersChange","numbers","CHANGE_NUMBERS","onSymbolsChange","symbols","CHANGE_SYMBOLS","settingsContainer","title","leftContainer","descriptionText","value","length","Math","round","Number","SET_LENGTH","rightContainer","checkboxWrapper","Button","onClick","id","baseButton","CreatePassword","count","useSelector","createPassword","password","copiedStatus","copied","result","passwordSymbolsProportion","maxPortionLength","floor","addPortion","arr","maxPortion","i","push","random","portion","randomMaxPortionLength","k","join","signSetsArr","SET_CHECKBOX_COUNT","passwordGenerate","newPassword","checkNewPasswordLength","slice","SET_PASSWORD","setPassword","useEffect","description","passwordContainer","buttonsContainer","navigator","clipboard","writeText","then","catch","error","console","log","Recommendations","contentContainer","question","RoutesContainer","path","element","ERROR","WRONG_PAGE","ErrorAll","textError","deleteMessageError","SET_ERROR_MESSAGE","setErrorMessage","setTimeout","App","globalContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialCreatePasswordState","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee5fee41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsContainer\":\"Settings_settingsContainer__2VMaP\",\"title\":\"Settings_title__1OkDL\",\"container\":\"Settings_container__7zmuV\",\"leftContainer\":\"Settings_leftContainer__2pOth\",\"descriptionText\":\"Settings_descriptionText__3MvG9\",\"length\":\"Settings_length__1_Fx-\",\"rightContainer\":\"Settings_rightContainer__1TxLP\",\"checkboxWrapper\":\"Settings_checkboxWrapper__MmkVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Recommendations_container__3ci1f\",\"contentContainer\":\"Recommendations_contentContainer__1mMZb\",\"question\":\"Recommendations_question__1ARHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2vcM1\",\"item\":\"Header_item__2zyPZ\",\"active\":\"Header_active__BjgPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreatePassword_container__ngEsC\",\"description\":\"CreatePassword_description__1HXeZ\",\"passwordContainer\":\"CreatePassword_passwordContainer__1bYuP\",\"password\":\"CreatePassword_password__1bhGF\",\"buttonsContainer\":\"CreatePassword_buttonsContainer__34jJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"ContactButton_globalContainer__1Me2b\",\"contactButton\":\"ContactButton_contactButton__2UkqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__xGetM\",\"contactsContainer\":\"Footer_contactsContainer__1VuzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelContainer\":\"Checkbox_labelContainer__2YCAY\",\"checkbox\":\"Checkbox_checkbox__2rzMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RoutesContainer_container__1rVut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseButton\":\"Button_baseButton__2ED6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"App_globalContainer__2Tcf9\"};","export enum PATH {\r\n  CREATE_PASSWORD = '/',\r\n  RECOMMENDATIONS = 'recommendations',\r\n  ERROR = '404',\r\n  WRONG_PAGE = '*',\r\n}\r\n","import React from 'react';\r\n\r\nimport s from './ContactButton.module.scss';\r\n\r\ntype ContactButtonType = {\r\n  link: string;\r\n  iconClass: string;\r\n};\r\n\r\nexport const ContactButton: React.FC<ContactButtonType> = ({ link, iconClass }) => (\r\n  <a className={s.contactButton} href={link} target=\"_blank\" rel=\"noreferrer\">\r\n    <span className={`${s.contactButtonIcon} fab ${iconClass}`} />\r\n  </a>\r\n);\r\n","import React from 'react';\r\n\r\nimport { ContactButton } from './ContactButton/ContactButton';\r\nimport style from './Footer.module.scss';\r\n\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const Footer = (): ReturnComponentType => (\r\n  <div className={style.container}>\r\n    <div className={style.contactsContainer}>\r\n      <ContactButton\r\n        link=\"https://www.linkedin.com/in/ssivenkov\"\r\n        iconClass=\"fa-linkedin-in\"\r\n      />\r\n      <ContactButton link=\"https://t.me/sergei_sivenkov\" iconClass=\"fa-telegram\" />\r\n      <ContactButton link=\"https://github.com/ssivenkov\" iconClass=\"fa-github\" />\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport style from './Header.module.scss';\r\n\r\nimport { PATH } from 'routes/routes';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const Header = (): ReturnComponentType => (\r\n  <div className={style.container}>\r\n    <div className={style.item}>\r\n      <NavLink\r\n        to={PATH.RECOMMENDATIONS}\r\n        className={({ isActive }) => (isActive ? style.active : '')}\r\n      >\r\n        Recommendations\r\n      </NavLink>\r\n    </div>\r\n    <div className={style.item}>\r\n      <NavLink\r\n        to={PATH.CREATE_PASSWORD}\r\n        className={({ isActive }) => (isActive ? style.active : '')}\r\n      >\r\n        Create password\r\n      </NavLink>\r\n    </div>\r\n  </div>\r\n);\r\n","export enum CREATE_PASSWORD_ACTIONS {\r\n  SET_ERROR_MESSAGE = 'createPasswordReducer/SET-ERROR-MESSAGE',\r\n  SET_PASSWORD = 'createPasswordReducer/SET-PASSWORD',\r\n  SET_LENGTH = 'createPasswordReducer/SET-LENGTH',\r\n  CHANGE_UPPERCASE_LETTERS = 'createPasswordReducer/CHANGE-UPPERCASE-LETTERS',\r\n  CHANGE_LOWERCASE_LETTERS = 'createPasswordReducer/CHANGE-LOWERCASE-LETTERS',\r\n  CHANGE_NUMBERS = 'createPasswordReducer/CHANGE-NUMBERS',\r\n  CHANGE_SYMBOLS = 'createPasswordReducer/CHANGE-SYMBOLS',\r\n  SET_COPIED_STATUS = 'createPasswordReducer/SET-COPIED-STATUS',\r\n  SET_CHECKBOX_COUNT = 'createPasswordReducer/SET-CHECKBOX-COUNT',\r\n}\r\n\r\nexport type createPasswordActionsType =\r\n  | ReturnType<typeof setErrorMessage>\r\n  | ReturnType<typeof setPassword>\r\n  | ReturnType<typeof setLength>\r\n  | ReturnType<typeof changeUppercaseLetters>\r\n  | ReturnType<typeof changeLowercaseLetters>\r\n  | ReturnType<typeof changeNumbers>\r\n  | ReturnType<typeof changeSymbols>\r\n  | ReturnType<typeof setCopiedStatus>\r\n  | ReturnType<typeof setCheckboxCount>;\r\n\r\nexport const setErrorMessage = (error: boolean, textError: string) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.SET_ERROR_MESSAGE, error, textError } as const);\r\n\r\nexport const setPassword = (password: string) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.SET_PASSWORD, password } as const);\r\n\r\nexport const setLength = (length: number) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.SET_LENGTH, length } as const);\r\n\r\nexport const changeUppercaseLetters = (uppercaseLetters: boolean) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.CHANGE_UPPERCASE_LETTERS, uppercaseLetters } as const);\r\n\r\nexport const changeLowercaseLetters = (lowercaseLetters: boolean) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.CHANGE_LOWERCASE_LETTERS, lowercaseLetters } as const);\r\n\r\nexport const changeNumbers = (numbers: boolean) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.CHANGE_NUMBERS, numbers } as const);\r\n\r\nexport const changeSymbols = (symbols: boolean) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.CHANGE_SYMBOLS, symbols } as const);\r\n\r\nexport const setCopiedStatus = (status: boolean) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.SET_COPIED_STATUS, status } as const);\r\n\r\nexport const setCheckboxCount = (count: number) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.SET_CHECKBOX_COUNT, count } as const);\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport { PATH } from 'routes/routes';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const Error404 = (): ReturnComponentType => (\r\n  <div>\r\n    <div>Error 404</div>\r\n    <div>\r\n      <NavLink to={PATH.CREATE_PASSWORD}>Back to home</NavLink>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react';\r\n\r\nimport style from './Checkbox.module.scss';\r\n\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n  disabled: boolean;\r\n  onChangeChecked: (checked: boolean) => void;\r\n};\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = ({\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  children,\r\n  checked,\r\n  disabled,\r\n}): ReturnComponentType => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    if (onChange) {\r\n      onChange(e);\r\n    }\r\n    if (onChangeChecked) {\r\n      onChangeChecked(e.currentTarget.checked);\r\n    }\r\n  };\r\n\r\n  const finalInputClassName = `${style.checkbox} ${className || ''}`;\r\n\r\n  return (\r\n    // eslint-disable-next-line jsx-a11y/label-has-associated-control\r\n    <label className={style.labelContainer}>\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        checked={checked}\r\n        disabled={disabled}\r\n      />\r\n      {children && <span>{children}</span>}\r\n    </label>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport './RangeSlider.scss';\r\nimport 'nouislider/dist/nouislider.css';\r\nimport Nouislider from 'nouislider-react';\r\n\r\ntype MapDispatchToPropsType = {\r\n  onUpdate: (value: Array<number>) => void;\r\n};\r\n\r\ntype MapStateToPropsType = {\r\n  startValue: number;\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  disabled: boolean;\r\n};\r\n\r\nexport type SuperDoubleRangePropsType = MapStateToPropsType & MapDispatchToPropsType;\r\n\r\ntype StateType = {\r\n  start: number;\r\n};\r\n\r\nexport class RangeSlider extends React.Component<SuperDoubleRangePropsType, StateType> {\r\n  constructor(props: SuperDoubleRangePropsType) {\r\n    super(props);\r\n    this.state = {\r\n      start: props.startValue,\r\n    };\r\n  }\r\n\r\n  render(): React.ReactElement {\r\n    const { min, max, step, disabled, onUpdate } = this.props;\r\n    const { start } = this.state;\r\n    return (\r\n      <div className=\"rangeSliderContainer\">\r\n        <Nouislider\r\n          range={{ min, max }}\r\n          start={start}\r\n          step={step}\r\n          disabled={disabled}\r\n          onUpdate={onUpdate}\r\n          animate={false}\r\n          connect\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const EMPTY_STRING = '';\r\nexport const FIRST_ELEMENT = 0;\r\nexport const ZERO = 0;\r\nexport const ONE = 1;\r\nexport const TWO = 2;\r\nexport const THREE = 3;\r\nexport const FOUR = 4;\r\nexport const FIVE = 5;\r\nexport const SIX = 6;\r\nexport const SEVEN = 7;\r\nexport const EIGHT = 8;\r\nexport const NINE = 9;\r\nexport const HUNDRED = 100;\r\n\r\nexport const numbersArr = [ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE];\r\nexport const symbolsArr = [\r\n  '!',\r\n  '?',\r\n  '*',\r\n  '@',\r\n  '#',\r\n  '$',\r\n  '%',\r\n  '&',\r\n  '.',\r\n  ':',\r\n  '_',\r\n  '-',\r\n  '+',\r\n  '=',\r\n  '~',\r\n  '^',\r\n  '<',\r\n  '>',\r\n  '(',\r\n  ')',\r\n  '[',\r\n  ']',\r\n  '{',\r\n  '}',\r\n];\r\nexport const uppercaseLettersArr = [\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n  'M',\r\n  'N',\r\n  'O',\r\n  'P',\r\n  'Q',\r\n  'R',\r\n  'S',\r\n  'T',\r\n  'U',\r\n  'V',\r\n  'W',\r\n  'X',\r\n  'Y',\r\n  'Z',\r\n];\r\nexport const lowercaseLettersArr = [\r\n  'a',\r\n  'b',\r\n  'c',\r\n  'd',\r\n  'e',\r\n  'f',\r\n  'g',\r\n  'h',\r\n  'i',\r\n  'j',\r\n  'k',\r\n  'l',\r\n  'm',\r\n  'n',\r\n  'o',\r\n  'p',\r\n  'q',\r\n  'r',\r\n  's',\r\n  't',\r\n  'u',\r\n  'v',\r\n  'w',\r\n  'x',\r\n  'y',\r\n  'z',\r\n];\r\n","import { FC } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport style from './Settings.module.scss';\r\n\r\nimport { Checkbox } from 'components/common/Checkbox/Checkbox';\r\nimport { RangeSlider } from 'components/common/RangeSlider/RangeSlider';\r\nimport { FIRST_ELEMENT, ONE, EIGHT, HUNDRED } from 'constants/common';\r\nimport {\r\n  changeUppercaseLetters,\r\n  changeLowercaseLetters,\r\n  changeNumbers,\r\n  changeSymbols,\r\n  setLength,\r\n} from 'store/actions/CreatePasswordActions';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\ntype SettingsType = {\r\n  checkboxCount: number;\r\n  passwordLength: number;\r\n  passwordUppercaseLetters: boolean;\r\n  passwordLowercaseLetters: boolean;\r\n  passwordNumbers: boolean;\r\n  passwordSymbols: boolean;\r\n};\r\n\r\nexport const Settings: FC<SettingsType> = ({\r\n  checkboxCount,\r\n  passwordLength,\r\n  passwordUppercaseLetters,\r\n  passwordLowercaseLetters,\r\n  passwordNumbers,\r\n  passwordSymbols,\r\n}): ReturnComponentType => {\r\n  const dispatch = useDispatch();\r\n  const checkboxDisable = (checked: boolean): boolean => checkboxCount <= ONE && checked;\r\n  const onRangeUpdate = (value: Array<number>): void => {\r\n    dispatch(setLength(Math.round(Number(value[FIRST_ELEMENT]))));\r\n  };\r\n  const onUppercaseLettersChange = (): void => {\r\n    dispatch(changeUppercaseLetters(!passwordUppercaseLetters));\r\n  };\r\n  const onLowercaseLettersChange = (): void => {\r\n    dispatch(changeLowercaseLetters(!passwordLowercaseLetters));\r\n  };\r\n  const onNumbersChange = (): void => {\r\n    dispatch(changeNumbers(!passwordNumbers));\r\n  };\r\n  const onSymbolsChange = (): void => {\r\n    dispatch(changeSymbols(!passwordSymbols));\r\n  };\r\n\r\n  return (\r\n    <div className={style.settingsContainer}>\r\n      <div className={style.title}>Settings</div>\r\n      <div className={style.container}>\r\n        <div className={style.leftContainer}>\r\n          <div className={style.descriptionText}>Length</div>\r\n          <RangeSlider\r\n            startValue={EIGHT}\r\n            min={EIGHT}\r\n            max={HUNDRED}\r\n            step={ONE}\r\n            disabled={false}\r\n            onUpdate={onRangeUpdate}\r\n          />\r\n          <div className={style.length}>{passwordLength}</div>\r\n        </div>\r\n        <div className={style.rightContainer}>\r\n          <div>\r\n            <div className={style.checkboxWrapper}>\r\n              <Checkbox\r\n                onChangeChecked={() => onUppercaseLettersChange()}\r\n                checked={passwordUppercaseLetters}\r\n                disabled={checkboxDisable(passwordUppercaseLetters)}\r\n              >\r\n                Uppercase letters\r\n              </Checkbox>\r\n            </div>\r\n            <div className={style.checkboxWrapper}>\r\n              <Checkbox\r\n                onChangeChecked={() => onLowercaseLettersChange()}\r\n                checked={passwordLowercaseLetters}\r\n                disabled={checkboxDisable(passwordLowercaseLetters)}\r\n              >\r\n                Lowercase letters\r\n              </Checkbox>\r\n            </div>\r\n            <div className={style.checkboxWrapper}>\r\n              <Checkbox\r\n                onChangeChecked={() => onNumbersChange()}\r\n                checked={passwordNumbers}\r\n                disabled={checkboxDisable(passwordNumbers)}\r\n              >\r\n                Numbers\r\n              </Checkbox>\r\n            </div>\r\n            <div className={style.checkboxWrapper}>\r\n              <Checkbox\r\n                onChangeChecked={() => onSymbolsChange()}\r\n                checked={passwordSymbols}\r\n                disabled={checkboxDisable(passwordSymbols)}\r\n              >\r\n                Symbols\r\n              </Checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\r\n\r\nimport style from './Button.module.scss';\r\n\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\nexport type ButtonType = DefaultButtonPropsType & {\r\n  title?: string;\r\n  className?: string;\r\n  condition?: boolean;\r\n  id?: string;\r\n};\r\n\r\nexport const Button: React.FC<ButtonType> = ({\r\n  children,\r\n  className,\r\n  onClick,\r\n  type,\r\n  disabled,\r\n  id,\r\n}): ReturnComponentType => (\r\n  <button\r\n    id={id}\r\n    /* eslint-disable-next-line react/button-has-type */\r\n    type={type}\r\n    className={`${className || style.baseButton}`}\r\n    onClick={onClick}\r\n    disabled={disabled}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n","import { useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport style from './CreatePassword.module.scss';\r\nimport { Settings } from './Settings/Settings';\r\n\r\nimport { Button } from 'components/common/Button/Button';\r\nimport {\r\n  ZERO,\r\n  ONE,\r\n  uppercaseLettersArr,\r\n  lowercaseLettersArr,\r\n  numbersArr,\r\n  symbolsArr,\r\n} from 'constants/common';\r\nimport {\r\n  setCheckboxCount,\r\n  setCopiedStatus,\r\n  setPassword,\r\n} from 'store/actions/CreatePasswordActions';\r\nimport { AppRootStateType } from 'store/store';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const CreatePassword = (): ReturnComponentType => {\r\n  const dispatch = useDispatch();\r\n\r\n  const checkboxCount = useSelector<AppRootStateType, number>(\r\n    state => state.createPassword.checkboxCount,\r\n  );\r\n  const passwordLength = useSelector<AppRootStateType, number>(\r\n    state => state.createPassword.length,\r\n  );\r\n  const passwordUppercaseLetters = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.uppercaseLetters,\r\n  );\r\n  const passwordLowercaseLetters = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.lowercaseLetters,\r\n  );\r\n  const passwordNumbers = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.numbers,\r\n  );\r\n  const passwordSymbols = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.symbols,\r\n  );\r\n  const password = useSelector<AppRootStateType, string>(\r\n    state => state.createPassword.password,\r\n  );\r\n  const copiedStatus = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.copied,\r\n  );\r\n\r\n  let result = '';\r\n  const maxSameSignTypeRepeatCount = ONE;\r\n  const passwordSymbolsProportion =\r\n    Number(passwordUppercaseLetters) +\r\n    Number(passwordLowercaseLetters) +\r\n    Number(passwordNumbers) +\r\n    Number(passwordSymbols);\r\n  const maxPortionLength = Math.floor(passwordLength / passwordSymbolsProportion);\r\n\r\n  /**\r\n   * adds a random number of random character types to the result variable.\r\n   * @param {Array} arr array of characters of the same type to form a fragment.\r\n   * @return {void} void.\r\n   * */\r\n  const addPortion = (arr: Array<number | string>): void => {\r\n    const maxPortion: Array<number | string> = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < maxPortionLength; i++) {\r\n      maxPortion.push(arr[Math.floor(Math.random() * arr.length)]);\r\n    }\r\n    const portion: Array<number | string> = [];\r\n    const randomMaxPortionLength =\r\n      Math.floor(Math.random() * maxSameSignTypeRepeatCount) + ONE;\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let k = 0; k < randomMaxPortionLength; k++) {\r\n      portion.push(maxPortion[Math.floor(Math.random() * maxPortion.length)]);\r\n    }\r\n    result += portion.join('');\r\n  };\r\n\r\n  const signSetsArr: Array<any> = [];\r\n  const fillingSignSetsArr = (): void => {\r\n    if (passwordUppercaseLetters) signSetsArr.push(uppercaseLettersArr);\r\n    if (passwordLowercaseLetters) signSetsArr.push(lowercaseLettersArr);\r\n    if (passwordNumbers) signSetsArr.push(numbersArr);\r\n    if (passwordSymbols) signSetsArr.push(symbolsArr);\r\n  };\r\n  fillingSignSetsArr();\r\n  dispatch(setCheckboxCount(signSetsArr.length));\r\n\r\n  const generatePassword = (): string => {\r\n    addPortion(signSetsArr[Math.floor(Math.random() * signSetsArr.length)]);\r\n    const checkNewPasswordLength = (): void => {\r\n      addPortion(signSetsArr[Math.floor(Math.random() * signSetsArr.length)]);\r\n      if (result.length < passwordLength) {\r\n        checkNewPasswordLength();\r\n      }\r\n    };\r\n    checkNewPasswordLength();\r\n    result = result.slice(ZERO, passwordLength);\r\n    return result;\r\n  };\r\n\r\n  const passwordGenerate = (): void => {\r\n    if (copiedStatus) dispatch(setCopiedStatus(false));\r\n    const newPassword = generatePassword();\r\n    dispatch(setPassword(newPassword));\r\n  };\r\n\r\n  const onCopyPasswordClick = (): void => {\r\n    navigator.clipboard\r\n      .writeText(password)\r\n      .then(() => {\r\n        dispatch(setCopiedStatus(true));\r\n      })\r\n      .catch(error => {\r\n        console.log(`Error copying password: ${error}`);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    passwordGenerate();\r\n  }, [\r\n    passwordLength,\r\n    passwordUppercaseLetters,\r\n    passwordLowercaseLetters,\r\n    passwordNumbers,\r\n    passwordSymbols,\r\n  ]);\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.description}>\r\n        Generate secure, random passwords to stay safe online\r\n      </div>\r\n      <div className={style.passwordContainer}>\r\n        <div className={style.password}>{password}</div>\r\n      </div>\r\n      <div className={style.buttonsContainer}>\r\n        <Button onClick={() => passwordGenerate()}>Generate</Button>\r\n        <Button onClick={() => onCopyPasswordClick()}>\r\n          {copiedStatus ? <span>Copied to clipboard</span> : <span>Copy password</span>}\r\n        </Button>\r\n      </div>\r\n      <Settings\r\n        checkboxCount={checkboxCount}\r\n        passwordLength={passwordLength}\r\n        passwordUppercaseLetters={passwordUppercaseLetters}\r\n        passwordLowercaseLetters={passwordLowercaseLetters}\r\n        passwordNumbers={passwordNumbers}\r\n        passwordSymbols={passwordSymbols}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import style from './Recommendations.module.scss';\r\n\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const Recommendations = (): ReturnComponentType => (\r\n  <div className={style.container}>\r\n    <div className={style.contentContainer}>\r\n      <div>\r\n        If it sounds hard to come up with a unique, random password each and every time\r\n        you sign up for a new service, that’s because it is. 81% of data breaches are\r\n        caused by weak or reused passwords, so random, unique passwords are your best\r\n        defense against online threats. Therefore suggest you use this app for generate\r\n        strong passwords.\r\n      </div>\r\n    </div>\r\n\r\n    <div className={style.contentContainer}>\r\n      <div className={style.question}>Why should my password be unique?</div>\r\n      <div>\r\n        If you use the same password for both your email and your bank account login, an\r\n        attacker only needs to steal one password to get access to both accounts, doubling\r\n        your exposure. If you&apos;ve used that same password for multiple different\r\n        accounts, you&apos;re making the attacker&apos;s job very, very easy.\r\n      </div>\r\n    </div>\r\n\r\n    <div className={style.contentContainer}>\r\n      <div className={style.question}>Why should my password be random?</div>\r\n      <div>\r\n        Random passwords are hard to guess and harder for computer programs to crack. If\r\n        there&apos;s a discernible pattern, the odds of an attacker gaining access to your\r\n        account go up exponentially. Random passwords contain a jumble of unrelated\r\n        characters, therefore their hack is much harder.\r\n      </div>\r\n    </div>\r\n\r\n    <div className={style.contentContainer}>\r\n      <div>Tips:</div>\r\n    </div>\r\n\r\n    <div className={style.contentContainer}>\r\n      <div>\r\n        Never include personally identifiable information in your passwords – or any\r\n        fields related to your login credentials for that matter. You might be surprised\r\n        at how much of that information can be found online. Those three security\r\n        questions that your bank requires for you to log in? Don&apos;t answer those.\r\n        Instead, use this app to generate random, unique answers to those questions. Save\r\n        the answers in this app just like you would a regular password, and you&apos;re\r\n        good to go.\r\n      </div>\r\n    </div>\r\n\r\n    <div className={style.contentContainer}>\r\n      <div>\r\n        If possible, try to make passwords passwords at least 16 characters in length.\r\n        Length can make a password much stronger than adding non-letters to a password. A\r\n        12-character, letters-only password is just eight times harder to crack than a\r\n        12-character password with digits, for example. But a 16-character, letters-only\r\n        password is eight million times harder to guess than a 12-character password.\r\n      </div>\r\n    </div>\r\n\r\n    <div className={style.contentContainer}>\r\n      <div>\r\n        To store passwords, we recommend creating a text file in which you can write login\r\n        data to the desired you sites. Then put this file in an archive and protect the\r\n        archive with a password. Thus, you only need to remember one password so that only\r\n        you can access the login data for the sites you need.\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\n\r\nimport style from './RoutesContainer.module.scss';\r\n\r\nimport { Error404 } from 'components/common/ErrorPages/Error404';\r\nimport { CreatePassword } from 'components/CreatePassword/CreatePassword';\r\nimport { Recommendations } from 'components/Recommendations/Recommendations';\r\nimport { PATH } from 'routes/routes';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const RoutesContainer = (): ReturnComponentType => (\r\n  <div className={style.container}>\r\n    <Routes>\r\n      <Route path={PATH.CREATE_PASSWORD} element={<CreatePassword />} />\r\n      <Route path={PATH.RECOMMENDATIONS} element={<Recommendations />} />\r\n      <Route path={PATH.ERROR} element={<Error404 />} />\r\n      <Route path={PATH.WRONG_PAGE} element={<Navigate to={PATH.ERROR} />} />\r\n    </Routes>\r\n  </div>\r\n);\r\n","import { useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { PATH } from '../../../routes/routes';\r\n\r\nimport { setErrorMessage } from 'store/actions/CreatePasswordActions';\r\nimport { AppRootStateType } from 'store/store';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const ErrorAll = (): ReturnComponentType => {\r\n  const error = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.error,\r\n  );\r\n  const textError = useSelector<AppRootStateType, string>(\r\n    state => state.createPassword.textError,\r\n  );\r\n  const dispatch = useDispatch();\r\n  const deleteMessageError = (): any => dispatch(setErrorMessage(false, ''));\r\n  const time = 3000;\r\n  useEffect(() => {\r\n    setTimeout(deleteMessageError, time);\r\n  }, [error]);\r\n\r\n  return (\r\n    <div>\r\n      {error && (\r\n        <div>\r\n          <h1>Error:</h1>\r\n          <h2>{textError}</h2>\r\n          <div>\r\n            <NavLink to={PATH.CREATE_PASSWORD}>Back to home</NavLink>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { Footer } from './components/Footer/Footer';\r\nimport { Header } from './components/Header/Header';\r\nimport { RoutesContainer } from './components/RoutesContainer/RoutesContainer';\r\n\r\nimport 'Null.module.scss';\r\nimport style from 'App.module.scss';\r\nimport { ErrorAll } from 'components/common/ErrorPages/ErrorAll';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const App: FC = (): ReturnComponentType => (\r\n  <div className={style.globalContainer}>\r\n    <ErrorAll />\r\n    <Header />\r\n    <RoutesContainer />\r\n    <Footer />\r\n  </div>\r\n);\r\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { EIGHT, EMPTY_STRING } from 'constants/common';\r\nimport {\r\n  CREATE_PASSWORD_ACTIONS,\r\n  createPasswordActionsType,\r\n} from 'store/actions/CreatePasswordActions';\r\n\r\nconst initialCreatePasswordState = {\r\n  password: EMPTY_STRING,\r\n  length: EIGHT,\r\n  uppercaseLetters: true,\r\n  lowercaseLetters: true,\r\n  numbers: true,\r\n  symbols: true,\r\n  error: false,\r\n  textError: EMPTY_STRING,\r\n  copied: false,\r\n  checkboxCount: 0,\r\n};\r\n\r\nexport type InitialCreatePasswordStateType = typeof initialCreatePasswordState;\r\n\r\nexport const createPasswordReducer = (\r\n  state: InitialCreatePasswordStateType = initialCreatePasswordState,\r\n  action: createPasswordActionsType,\r\n): InitialCreatePasswordStateType => {\r\n  switch (action.type) {\r\n    case CREATE_PASSWORD_ACTIONS.SET_ERROR_MESSAGE:\r\n      return { ...state, error: action.error, textError: action.textError };\r\n    case CREATE_PASSWORD_ACTIONS.SET_PASSWORD:\r\n      return { ...state, password: action.password };\r\n    case CREATE_PASSWORD_ACTIONS.SET_LENGTH:\r\n      return { ...state, length: action.length };\r\n    case CREATE_PASSWORD_ACTIONS.CHANGE_UPPERCASE_LETTERS:\r\n      return { ...state, uppercaseLetters: action.uppercaseLetters };\r\n    case CREATE_PASSWORD_ACTIONS.CHANGE_LOWERCASE_LETTERS:\r\n      return { ...state, lowercaseLetters: action.lowercaseLetters };\r\n    case CREATE_PASSWORD_ACTIONS.CHANGE_NUMBERS:\r\n      return { ...state, numbers: action.numbers };\r\n    case CREATE_PASSWORD_ACTIONS.CHANGE_SYMBOLS:\r\n      return { ...state, symbols: action.symbols };\r\n    case CREATE_PASSWORD_ACTIONS.SET_COPIED_STATUS:\r\n      return { ...state, copied: action.status };\r\n    case CREATE_PASSWORD_ACTIONS.SET_CHECKBOX_COUNT:\r\n      return { ...state, checkboxCount: action.count };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\r\nimport thunk, { ThunkAction } from 'redux-thunk';\r\n\r\nimport { createPasswordActionsType } from './actions/CreatePasswordActions';\r\nimport { createPasswordReducer } from './reducers/CreatePasswordReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  createPassword: createPasswordReducer,\r\n});\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\nexport type AppActionsType = createPasswordActionsType;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  AppRootStateType,\r\n  unknown,\r\n  AppActionsType\r\n>;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { store } from 'store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}