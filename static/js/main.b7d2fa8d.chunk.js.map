{"version":3,"sources":["components/common/longButton/LongButton.module.scss","pages/routesContainer/RoutesContainer.module.scss","App.module.scss","pages/createPasswordPage/settings/Settings.module.scss","pages/tipsPage/TipsPage.module.scss","enums/routesEnum.ts","constants/common.ts","redux/reducers/createPasswordSlice/CreatePasswordSlice.ts","redux/store.ts","colors/themeColors.ts","components/footer/contactButton/ContactButton.tsx","components/footer/Footer.tsx","components/header/Header.tsx","components/common/longButton/LongButton.tsx","themes/changeTheme.ts","components/themeChangeBar/themeButton/ThemeButton.tsx","components/themeChangeBar/ThemeChangeBar.tsx","hooks/redux.ts","components/common/checkbox/Checkbox.tsx","components/common/rangeSlider/RangeSlider.tsx","pages/createPasswordPage/settings/Settings.tsx","pages/createPasswordPage/CreatePasswordPage.tsx","pages/error404Page/Error404Page.tsx","pages/tipsPage/TipsPage.tsx","pages/routesContainer/RoutesContainer.tsx","App.tsx","index.tsx","components/header/Header.module.scss","pages/createPasswordPage/CreatePasswordPage.module.scss","components/common/checkbox/Checkbox.module.scss","pages/error404Page/Error404Page.module.scss","components/footer/contactButton/ContactButton.module.scss","components/footer/Footer.module.scss","components/themeChangeBar/themeButton/ThemeButton.module.scss","components/themeChangeBar/ThemeChangeBar.module.scss"],"names":["module","exports","PATH","RED_THEME","YELLOW_THEME","GREEN_THEME","BLUE_THEME","numbersArr","symbolsArr","uppercaseLettersArr","lowercaseLettersArr","initialState","password","length","uppercaseLetters","lowercaseLetters","numbers","symbols","copied","checkboxCount","isLoading","error","createPasswordSlice","createSlice","name","reducers","setCopiedStatus","state","action","payload","setPassword","setCheckboxCount","setLength","setUppercaseLetters","setLowercaseLetters","setNumbers","setSymbols","rootReducer","combineReducers","createPasswordReducer","store","configureStore","reducer","useAppDispatch","useDispatch","redThemeColors","yellowThemeColors","greenThemeColors","blueThemeColors","ContactButton","props","link","iconClass","className","styles","contactButton","href","rel","target","contactButtonIcon","Footer","container","contactsContainer","Header","item","isActive","active","to","RECOMMENDATIONS","CREATE_PASSWORD","LongButton","children","onClick","longButton","type","changeTheme","params","userTheme","themeColors","localStorage","setItem","doc","document","querySelector","style","setProperty","ThemeButton","theme","themeButton","ThemeChangeBar","buttonsContainer","useAppSelector","useSelector","Checkbox","onChange","onChangeChecked","checked","isDisabled","finalInputClassName","checkbox","labelContainer","disabled","event","currentTarget","title","RangeSlider","start","startValue","this","min","max","step","onUpdate","animate","connect","range","React","Component","Settings","passwordLength","isPasswordUppercaseLetters","isPasswordLowercaseLetters","isPasswordNumbers","isPasswordSymbols","dispatch","actions","checkboxDisableCondition","settingsContainer","leftContainer","descriptionText","value","Math","round","Number","lengthText","rightContainer","checkboxWrapper","CreatePasswordPage","copiedStatus","result","passwordSymbolsProportion","maxPortionLength","floor","addPortion","arr","maxPortion","i","push","random","portion","randomMaxPortionLength","k","join","signSetsArr","currentCheckboxCount","passwordGenerate","checkNewPasswordLength","slice","useEffect","description","passwordContainer","navigator","clipboard","writeText","then","Error404Page","errorText","linkText","RecommendationsComponent","contentContainer","question","TipsPage","memo","RoutesContainer","element","path","START_PAGE","ERROR","WRONG_PAGE","App","getItem","localTheme","themeColorsPack","maxHeight","appContainer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b7d2fa8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"LongButton_appContainer__3Ji7Q\",\"longButton\":\"LongButton_longButton__3wPyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RoutesContainer_container__2668b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__1hNk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"Settings_appContainer__1_wyD\",\"settingsContainer\":\"Settings_settingsContainer__2cPv-\",\"title\":\"Settings_title__3TNU1\",\"container\":\"Settings_container__2U8AE\",\"leftContainer\":\"Settings_leftContainer__1t3Gl\",\"descriptionText\":\"Settings_descriptionText__3n_EA\",\"lengthText\":\"Settings_lengthText__1HXL0\",\"rightContainer\":\"Settings_rightContainer__1mdKY\",\"checkboxWrapper\":\"Settings_checkboxWrapper__2_ZUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"TipsPage_appContainer__gf4mo\",\"container\":\"TipsPage_container__1feRn\",\"contentContainer\":\"TipsPage_contentContainer__3FY2z\",\"question\":\"TipsPage_question__1gYpj\"};","export enum PATH {\n  CREATE_PASSWORD = 'create-password',\n  RECOMMENDATIONS = 'recommendations',\n  ERROR = '404',\n  WRONG_PAGE = '*',\n  START_PAGE = '/',\n}\n","export const FIRST_ELEMENT = 0;\nexport const SECOND_ELEMENT = 1;\nexport const THIRD_ELEMENT = 2;\nexport const FOURTH_ELEMENT = 3;\nexport const FIFTH_ELEMENT = 4;\nexport const SIXTH_ELEMENT = 5;\nexport const SEVENTH_ELEMENT = 6;\nexport const EIGHTH_ELEMENT = 7;\nexport const NINTH_ELEMENT = 8;\nexport const ZERO = 0;\nexport const ONE = 1;\nexport const TWO = 2;\nexport const THREE = 3;\nexport const FOUR = 4;\nexport const FIVE = 5;\nexport const SIX = 6;\nexport const SEVEN = 7;\nexport const EIGHT = 8;\nexport const NINE = 9;\nexport const FIFTY = 50;\nexport const RED_THEME = 'redTheme';\nexport const YELLOW_THEME = 'yellowTheme';\nexport const GREEN_THEME = 'greenTheme';\nexport const BLUE_THEME = 'blueTheme';\n\nexport const numbersArr = [ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE];\n\nexport const symbolsArr = [\n  '!',\n  '?',\n  '*',\n  '@',\n  '#',\n  '$',\n  '%',\n  '&',\n  '.',\n  ':',\n  '_',\n  '-',\n  '+',\n  '=',\n  '~',\n  '^',\n  '<',\n  '>',\n  '(',\n  ')',\n  '[',\n  ']',\n  '{',\n  '}',\n];\n\nexport const uppercaseLettersArr = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n];\n\nexport const lowercaseLettersArr = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n];\n","import { EIGHT } from 'constants/common';\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { CreatePasswordState } from './types';\n\nconst initialState: CreatePasswordState = {\n  password: '',\n  length: EIGHT,\n  uppercaseLetters: true,\n  lowercaseLetters: true,\n  numbers: true,\n  symbols: true,\n  copied: false,\n  checkboxCount: 0,\n  isLoading: false,\n  error: '',\n};\n\nexport const createPasswordSlice = createSlice({\n  name: 'createPassword',\n  initialState,\n  reducers: {\n    setCopiedStatus(state, action: PayloadAction<CreatePasswordState['copied']>) {\n      state.copied = action.payload;\n    },\n\n    setPassword(state, action: PayloadAction<CreatePasswordState['password']>) {\n      state.password = action.payload;\n    },\n\n    setCheckboxCount(state, action: PayloadAction<CreatePasswordState['checkboxCount']>) {\n      state.checkboxCount = action.payload;\n    },\n\n    setLength(state, action: PayloadAction<CreatePasswordState['length']>) {\n      state.length = action.payload;\n    },\n\n    setUppercaseLetters(\n      state,\n      action: PayloadAction<CreatePasswordState['uppercaseLetters']>,\n    ) {\n      state.uppercaseLetters = action.payload;\n    },\n\n    setLowercaseLetters(\n      state,\n      action: PayloadAction<CreatePasswordState['lowercaseLetters']>,\n    ) {\n      state.lowercaseLetters = action.payload;\n    },\n\n    setNumbers(state, action: PayloadAction<CreatePasswordState['numbers']>) {\n      state.numbers = action.payload;\n    },\n\n    setSymbols(state, action: PayloadAction<CreatePasswordState['symbols']>) {\n      state.symbols = action.payload;\n    },\n  },\n});\n\nexport default createPasswordSlice.reducer;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport createPasswordReducer from 'redux/reducers/createPasswordSlice/CreatePasswordSlice';\n\nconst rootReducer = combineReducers({\n  createPasswordReducer,\n});\n\nexport const store = configureStore({ reducer: rootReducer });\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\n\nexport type AppRootState = ReturnType<typeof rootReducer>;\n","export const redThemeColors = [\n  '#ff6971',\n  '#ff5154',\n  '#e47079',\n  '#b12638',\n  '#7f292e',\n  '#42080a',\n  '#380407',\n  '#c36e79',\n  '#ffabb1',\n];\n\nexport const yellowThemeColors = [\n  '#f9db4d',\n  '#fffe3d',\n  '#d2be3f',\n  '#b68320',\n  '#8f771a',\n  '#503409',\n  '#362103',\n  '#e5b121',\n  '#ffeb88',\n];\n\nexport const greenThemeColors = [\n  '#71f85c',\n  '#55ff50',\n  '#50b350',\n  '#2d8015',\n  '#1f6d1f',\n  '#133207',\n  '#123b03',\n  '#379f4f',\n  '#80d37f',\n];\n\nexport const blueThemeColors = [\n  '#83c5ff',\n  '#61e8f7',\n  '#688bee',\n  '#265fb5',\n  '#364f9f',\n  '#082446',\n  '#031c3b',\n  '#5585b9',\n  '#9fc5ff',\n];\n","import React from 'react';\n\nimport styles from './ContactButton.module.scss';\nimport { ContactButtonPropsType } from './types';\n\nexport const ContactButton = (props: ContactButtonPropsType) => {\n  const { link, iconClass } = props;\n\n  return (\n    <a className={styles.contactButton} href={link} rel='noreferrer' target='_blank'>\n      <span className={`${styles.contactButtonIcon} fab ${iconClass}`} />\n    </a>\n  );\n};\n","import React from 'react';\n\nimport { ContactButton } from './contactButton/ContactButton';\nimport styles from './Footer.module.scss';\n\nexport const Footer = () => (\n  <div className={styles.container}>\n    <div className={styles.contactsContainer}>\n      <ContactButton\n        iconClass='fa-linkedin-in'\n        link='https://www.linkedin.com/in/ssivenkov'\n      />\n      <ContactButton iconClass='fa-telegram' link='https://t.me/orihiru' />\n      <ContactButton iconClass='fa-github' link='https://github.com/ssivenkov' />\n      <ContactButton\n        iconClass='fa-skype'\n        link='https://join.skype.com/invite/cdkkYBX1uutB'\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { PATH } from 'enums/routesEnum';\nimport { NavLink } from 'react-router-dom';\n\nimport styles from './Header.module.scss';\n\nexport const Header = () => (\n  <div className={styles.container}>\n    <div className={styles.item}>\n      <NavLink\n        className={({ isActive }) => (isActive ? styles.active : '')}\n        to={PATH.RECOMMENDATIONS}\n      >\n        Tips\n      </NavLink>\n    </div>\n    <div className={styles.item}>\n      <NavLink\n        className={({ isActive }) => (isActive ? styles.active : '')}\n        to={PATH.CREATE_PASSWORD}\n      >\n        Create password\n      </NavLink>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport styles from './LongButton.module.scss';\nimport { LongButtonPropsType } from './types';\n\nexport const LongButton = (props: LongButtonPropsType) => {\n  const { children, onClick } = props;\n\n  return (\n    <button className={styles.longButton} onClick={onClick} type='button'>\n      {children}\n    </button>\n  );\n};\n","import {\n  EIGHTH_ELEMENT,\n  FIFTH_ELEMENT,\n  FIRST_ELEMENT,\n  FOURTH_ELEMENT,\n  NINTH_ELEMENT,\n  SECOND_ELEMENT,\n  SEVENTH_ELEMENT,\n  SIXTH_ELEMENT,\n  THIRD_ELEMENT,\n} from 'constants/common';\n\ntype ChangeThemeParams = {\n  userTheme: string;\n  themeColors: string[];\n};\n\nexport const changeTheme = (params: ChangeThemeParams): void => {\n  const { userTheme, themeColors } = params;\n\n  localStorage.setItem('userTheme', userTheme);\n  const doc = document.querySelector('html');\n\n  if (doc) {\n    doc.style.setProperty('--primary_light', themeColors[FIRST_ELEMENT]);\n    doc.style.setProperty('--primary', themeColors[SECOND_ELEMENT]);\n    doc.style.setProperty('--primary_dim', themeColors[THIRD_ELEMENT]);\n    doc.style.setProperty('--primary_medium', themeColors[FOURTH_ELEMENT]);\n    doc.style.setProperty('--primary_almost-medium', themeColors[FIFTH_ELEMENT]);\n    doc.style.setProperty('--primary_half-medium', themeColors[SIXTH_ELEMENT]);\n    doc.style.setProperty('--primary_dark', themeColors[SEVENTH_ELEMENT]);\n    doc.style.setProperty('--background1', themeColors[EIGHTH_ELEMENT]);\n    doc.style.setProperty('--background2', themeColors[NINTH_ELEMENT]);\n  }\n};\n","import styles from './ThemeButton.module.scss';\nimport { ThemeButtonPropsType } from './types';\n\nexport const ThemeButton = (props: ThemeButtonPropsType) => {\n  const { theme, onClick } = props;\n\n  return (\n    <button\n      className={`${styles.themeButton} ${styles[theme]}`}\n      onClick={onClick}\n      type='button'\n    />\n  );\n};\n","import { RED_THEME, YELLOW_THEME, GREEN_THEME, BLUE_THEME } from 'constants/common';\n\nimport {\n  blueThemeColors,\n  greenThemeColors,\n  redThemeColors,\n  yellowThemeColors,\n} from 'colors/themeColors';\nimport { changeTheme } from 'themes/changeTheme';\n\nimport { ThemeButton } from './themeButton/ThemeButton';\nimport styles from './ThemeChangeBar.module.scss';\n\nexport const ThemeChangeBar = () => (\n  <div className={styles.container}>\n    <div className={styles.buttonsContainer}>\n      <ThemeButton\n        onClick={() => changeTheme({ userTheme: RED_THEME, themeColors: redThemeColors })}\n        theme={RED_THEME}\n      />\n      <ThemeButton\n        onClick={() =>\n          changeTheme({ userTheme: YELLOW_THEME, themeColors: yellowThemeColors })\n        }\n        theme={YELLOW_THEME}\n      />\n      <ThemeButton\n        onClick={() =>\n          changeTheme({ userTheme: GREEN_THEME, themeColors: greenThemeColors })\n        }\n        theme={GREEN_THEME}\n      />\n      <ThemeButton\n        onClick={() =>\n          changeTheme({ userTheme: BLUE_THEME, themeColors: blueThemeColors })\n        }\n        theme={BLUE_THEME}\n      />\n    </div>\n  </div>\n);\n","import { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { AppRootState } from 'redux/store';\n\nexport const useAppSelector: TypedUseSelectorHook<AppRootState> = useSelector;\n","import React, { ChangeEvent } from 'react';\n\nimport styles from './Checkbox.module.scss';\nimport { CheckboxPropsType } from './types';\n\nexport const Checkbox = (props: CheckboxPropsType) => {\n  const { onChange, onChangeChecked, className, children, checked, isDisabled } = props;\n\n  const onChangeCallback = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (onChange) {\n      onChange(event);\n    }\n\n    if (onChangeChecked) {\n      onChangeChecked(event.currentTarget.checked);\n    }\n  };\n\n  const finalInputClassName = `${styles.checkbox} ${className || ''}`;\n\n  return (\n    <label className={styles.labelContainer}>\n      <input\n        checked={checked}\n        className={finalInputClassName}\n        disabled={isDisabled}\n        onChange={onChangeCallback}\n        type='checkbox'\n      />\n      {children && <span className={styles.title}>{children}</span>}\n    </label>\n  );\n};\n","import React from 'react';\n\nimport './RangeSlider.scss';\nimport 'nouislider/dist/nouislider.css';\nimport Nouislider from 'nouislider-react';\n\nimport { StateType, RangeSliderPropsType } from './types';\n\nexport class RangeSlider extends React.Component<RangeSliderPropsType, StateType> {\n  constructor(props: RangeSliderPropsType) {\n    super(props);\n    this.state = {\n      start: props.startValue,\n    };\n  }\n\n  render(): React.ReactElement {\n    const { min, max, step, disabled, onUpdate } = this.props;\n    const { start } = this.state;\n\n    return (\n      <div className='rangeSliderContainer'>\n        <Nouislider\n          animate={false}\n          connect={true}\n          disabled={disabled}\n          onUpdate={onUpdate}\n          range={{ min, max }}\n          start={start}\n          step={step}\n        />\n      </div>\n    );\n  }\n}\n","import { EIGHT, FIFTY, FIRST_ELEMENT, ONE } from 'constants/common';\n\nimport { Checkbox } from 'components/common/checkbox/Checkbox';\nimport { RangeSlider } from 'components/common/rangeSlider/RangeSlider';\nimport { createPasswordSlice } from 'redux/reducers/createPasswordSlice/CreatePasswordSlice';\nimport { useAppDispatch } from 'redux/store';\n\nimport styles from './Settings.module.scss';\nimport { SettingsPropsType } from './types';\n\nexport const Settings = (props: SettingsPropsType) => {\n  const {\n    checkboxCount,\n    passwordLength,\n    isPasswordUppercaseLetters,\n    isPasswordLowercaseLetters,\n    isPasswordNumbers,\n    isPasswordSymbols,\n  } = props;\n\n  const dispatch = useAppDispatch();\n\n  const { setLength, setUppercaseLetters, setLowercaseLetters, setNumbers, setSymbols } =\n    createPasswordSlice.actions;\n\n  const checkboxDisableCondition = (checked: boolean): boolean =>\n    checkboxCount <= ONE && checked;\n\n  const onRangeUpdate = (value: Array<number>): void => {\n    const length = Math.round(Number(value[FIRST_ELEMENT]));\n\n    dispatch(setLength(length));\n  };\n\n  const onUppercaseLettersChange = (): void => {\n    const uppercaseLetters = !isPasswordUppercaseLetters;\n\n    dispatch(setUppercaseLetters(uppercaseLetters));\n  };\n\n  const onLowercaseLettersChange = (): void => {\n    const lowercaseLetters = !isPasswordLowercaseLetters;\n\n    dispatch(setLowercaseLetters(lowercaseLetters));\n  };\n\n  const onNumbersChange = (): void => {\n    const numbers = !isPasswordNumbers;\n\n    dispatch(setNumbers(numbers));\n  };\n\n  const onSymbolsChange = (): void => {\n    const symbols = !isPasswordSymbols;\n\n    dispatch(setSymbols(symbols));\n  };\n\n  return (\n    <div className={styles.settingsContainer}>\n      <div className={styles.title}>Settings</div>\n      <div className={styles.container}>\n        <div className={styles.leftContainer}>\n          <div className={styles.descriptionText}>Length</div>\n          <RangeSlider\n            disabled={false}\n            max={FIFTY}\n            min={EIGHT}\n            onUpdate={onRangeUpdate}\n            startValue={EIGHT}\n            step={ONE}\n          />\n          <div className={styles.lengthText}>{passwordLength}</div>\n        </div>\n        <div className={styles.rightContainer}>\n          <div className={styles.checkboxWrapper}>\n            <Checkbox\n              checked={isPasswordUppercaseLetters}\n              isDisabled={checkboxDisableCondition(isPasswordUppercaseLetters)}\n              onChangeChecked={() => onUppercaseLettersChange()}\n            >\n              Uppercase letters\n            </Checkbox>\n          </div>\n          <div className={styles.checkboxWrapper}>\n            <Checkbox\n              checked={isPasswordLowercaseLetters}\n              isDisabled={checkboxDisableCondition(isPasswordLowercaseLetters)}\n              onChangeChecked={() => onLowercaseLettersChange()}\n            >\n              Lowercase letters\n            </Checkbox>\n          </div>\n          <div className={styles.checkboxWrapper}>\n            <Checkbox\n              checked={isPasswordNumbers}\n              isDisabled={checkboxDisableCondition(isPasswordNumbers)}\n              onChangeChecked={() => onNumbersChange()}\n            >\n              Numbers\n            </Checkbox>\n          </div>\n          <div className={styles.checkboxWrapper}>\n            <Checkbox\n              checked={isPasswordSymbols}\n              isDisabled={checkboxDisableCondition(isPasswordSymbols)}\n              onChangeChecked={() => onSymbolsChange()}\n            >\n              Symbols\n            </Checkbox>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  lowercaseLettersArr,\n  numbersArr,\n  ONE,\n  symbolsArr,\n  uppercaseLettersArr,\n  ZERO,\n} from 'constants/common';\n\nimport { useEffect } from 'react';\n\nimport { LongButton } from 'components/common/longButton/LongButton';\nimport { ThemeChangeBar } from 'components/themeChangeBar/ThemeChangeBar';\nimport { useAppSelector } from 'hooks/redux';\nimport { createPasswordSlice } from 'redux/reducers/createPasswordSlice/CreatePasswordSlice';\nimport { useAppDispatch } from 'redux/store';\n\nimport styles from './CreatePasswordPage.module.scss';\nimport { Settings } from './settings/Settings';\n\nexport const CreatePasswordPage = () => {\n  const {\n    copied: copiedStatus,\n    checkboxCount,\n    length: passwordLength,\n    uppercaseLetters,\n    lowercaseLetters,\n    numbers,\n    symbols,\n    password,\n  } = useAppSelector((state) => state.createPasswordReducer);\n\n  const dispatch = useAppDispatch();\n\n  const { setCopiedStatus, setCheckboxCount, setPassword } = createPasswordSlice.actions;\n\n  let result = '';\n  const maxSameSignTypeRepeatCount = ONE;\n  const passwordSymbolsProportion =\n    Number(uppercaseLetters) +\n    Number(lowercaseLetters) +\n    Number(numbers) +\n    Number(symbols);\n  const maxPortionLength = Math.floor(passwordLength / passwordSymbolsProportion);\n\n  /**\n   * Adds a random number of random character types to the result variable.\n   * @param {Array} arr array of characters of the same type to form a fragment.\n   * @return {void} void.\n   * */\n\n  const addPortion = (arr: Array<number | string>): void => {\n    const maxPortion: Array<number | string> = [];\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < maxPortionLength; i++) {\n      maxPortion.push(arr[Math.floor(Math.random() * arr.length)]);\n    }\n    const portion: Array<number | string> = [];\n    const randomMaxPortionLength =\n      Math.floor(Math.random() * maxSameSignTypeRepeatCount) + ONE;\n\n    // eslint-disable-next-line no-plusplus\n    for (let k = 0; k < randomMaxPortionLength; k++) {\n      portion.push(maxPortion[Math.floor(Math.random() * maxPortion.length)]);\n    }\n\n    result += portion.join('');\n  };\n\n  const signSetsArr: Array<string[] | number[]> = [];\n  const fillingSignSetsArr = (): void => {\n    if (uppercaseLetters) signSetsArr.push(uppercaseLettersArr);\n\n    if (lowercaseLetters) signSetsArr.push(lowercaseLettersArr);\n\n    if (numbers) signSetsArr.push(numbersArr);\n\n    if (symbols) signSetsArr.push(symbolsArr);\n  };\n\n  fillingSignSetsArr();\n\n  const currentCheckboxCount = signSetsArr.length;\n\n  dispatch(setCheckboxCount(currentCheckboxCount));\n\n  const generatePassword = (): string => {\n    addPortion(signSetsArr[Math.floor(Math.random() * signSetsArr.length)]);\n    const checkNewPasswordLength = (): void => {\n      addPortion(signSetsArr[Math.floor(Math.random() * signSetsArr.length)]);\n\n      if (result.length < passwordLength) {\n        checkNewPasswordLength();\n      }\n    };\n\n    checkNewPasswordLength();\n    result = result.slice(ZERO, passwordLength);\n\n    return result;\n  };\n\n  const passwordGenerate = (): void => {\n    if (copiedStatus) {\n      dispatch(setCopiedStatus(false));\n    }\n\n    const password = generatePassword();\n\n    dispatch(setPassword(password));\n  };\n\n  const onCopyPasswordClick = (): void => {\n    navigator.clipboard.writeText(password).then(() => {\n      dispatch(setCopiedStatus(true));\n    });\n  };\n\n  useEffect(() => {\n    passwordGenerate();\n  }, [passwordLength, uppercaseLetters, lowercaseLetters, numbers, symbols]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.description}>\n        Generate secure, random passwords to stay safe online\n      </div>\n      <div className={styles.passwordContainer}>\n        <div className={styles.password}>{password}</div>\n      </div>\n      <div className={styles.buttonsContainer}>\n        <LongButton onClick={() => passwordGenerate()}>Generate</LongButton>\n        <LongButton onClick={() => onCopyPasswordClick()}>\n          {copiedStatus ? <span>Copied to clipboard</span> : <span>Copy password</span>}\n        </LongButton>\n      </div>\n      <Settings\n        checkboxCount={checkboxCount}\n        isPasswordLowercaseLetters={lowercaseLetters}\n        isPasswordNumbers={numbers}\n        isPasswordSymbols={symbols}\n        isPasswordUppercaseLetters={uppercaseLetters}\n        passwordLength={passwordLength}\n      />\n      <ThemeChangeBar />\n    </div>\n  );\n};\n","import { PATH } from 'enums/routesEnum';\nimport { Link } from 'react-router-dom';\n\nimport styles from './Error404Page.module.scss';\n\nexport const Error404Page = () => (\n  <div className={styles.container}>\n    <span className={styles.errorText}>Error 404: page not found</span>\n    <Link className={styles.linkText} to={`../${PATH.CREATE_PASSWORD}`}>\n      Back to home\n    </Link>\n  </div>\n);\n","import { memo } from 'react';\n\nimport { ThemeChangeBar } from 'components/themeChangeBar/ThemeChangeBar';\n\nimport styles from './TipsPage.module.scss';\n\nconst RecommendationsComponent = () => (\n  <div className={styles.container}>\n    <div className={styles.contentContainer}>\n      <div>\n        If it sounds hard to come up with a unique, random password each and every time\n        you sign up for a new service, that’s because it is. 81% of data breaches are\n        caused by weak or reused passwords, so random, unique passwords are your best\n        defense against online threats. Therefore suggest you use this app for generate\n        strong passwords.\n      </div>\n    </div>\n\n    <div className={styles.contentContainer}>\n      <div className={styles.question}>Why should my password be unique?</div>\n      <div>\n        If you use the same password for both your email and your bank account login, an\n        attacker only needs to steal one password to get access to both accounts, doubling\n        your exposure. If you&apos;ve used that same password for multiple different\n        accounts, you&apos;re making the attacker&apos;s job very, very easy.\n      </div>\n    </div>\n\n    <div className={styles.contentContainer}>\n      <div className={styles.question}>Why should my password be random?</div>\n      <div>\n        Random passwords are hard to guess and harder for computer programs to crack. If\n        there&apos;s a discernible pattern, the odds of an attacker gaining access to your\n        account go up exponentially. Random passwords contain a jumble of unrelated\n        characters, therefore their hack is much harder.\n      </div>\n    </div>\n\n    <div className={styles.contentContainer}>\n      <div>Tips:</div>\n    </div>\n\n    <div className={styles.contentContainer}>\n      <div>\n        Never include personally identifiable information in your passwords – or any\n        fields related to your login credentials for that matter. You might be surprised\n        at how much of that information can be found online. Those three security\n        questions that your bank requires for you to log in? Don&apos;t answer those.\n        Instead, use this app to generate random, unique answers to those questions.\n      </div>\n    </div>\n\n    <div className={styles.contentContainer}>\n      <div>\n        If possible, try to make passwords passwords at least 16 characters in length.\n        Length can make a password much stronger than adding non-letters to a password. A\n        12-character, letters-only password is just eight times harder to crack than a\n        12-character password with digits, for example. But a 16-character, letters-only\n        password is eight million times harder to guess than a 12-character password.\n      </div>\n    </div>\n\n    <div className={styles.contentContainer}>\n      <div>\n        To store passwords, we recommend creating a text file in which you can write login\n        data to the desired you sites. Then put this file in an archive and protect the\n        archive with a password. Thus, you only need to remember one password so that only\n        you can access the login data for the sites you need.\n      </div>\n    </div>\n\n    <div className={styles.contentContainer}>\n      <ThemeChangeBar />\n    </div>\n  </div>\n);\n\nexport const TipsPage = memo(RecommendationsComponent);\n","import React from 'react';\n\nimport { PATH } from 'enums/routesEnum';\nimport { CreatePasswordPage } from 'pages/createPasswordPage/CreatePasswordPage';\nimport { Error404Page } from 'pages/error404Page/Error404Page';\nimport { TipsPage } from 'pages/tipsPage/TipsPage';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport styles from './RoutesContainer.module.scss';\n\nexport const RoutesContainer = () => (\n  <div className={styles.container}>\n    <Routes>\n      <Route element={<Navigate to={PATH.CREATE_PASSWORD} />} path={PATH.START_PAGE} />\n      <Route element={<CreatePasswordPage />} path={PATH.CREATE_PASSWORD} />\n      <Route element={<TipsPage />} path={PATH.RECOMMENDATIONS} />\n      <Route element={<Error404Page />} path={PATH.ERROR} />\n      <Route element={<Navigate to={PATH.ERROR} />} path={PATH.WRONG_PAGE} />\n    </Routes>\n  </div>\n);\n","import { BLUE_THEME, GREEN_THEME, RED_THEME, YELLOW_THEME } from 'constants/common';\n\nimport React from 'react';\n\nimport 'Null.module.scss';\nimport 'simplebar/dist/simplebar.min.css';\nimport './SimpleBar.scss';\nimport {\n  blueThemeColors,\n  greenThemeColors,\n  redThemeColors,\n  yellowThemeColors,\n} from 'colors/themeColors';\nimport { Footer } from 'components/footer/Footer';\nimport { Header } from 'components/header/Header';\nimport { RoutesContainer } from 'pages/routesContainer/RoutesContainer';\nimport SimpleBar from 'simplebar-react';\nimport { changeTheme } from 'themes/changeTheme';\n\nimport styles from './App.module.scss';\n\nconst App = () => {\n  if (localStorage.getItem('userTheme')) {\n    let localTheme = GREEN_THEME;\n    const userTheme = localStorage.getItem('userTheme') ?? false;\n\n    if (userTheme) {\n      localTheme = userTheme;\n    }\n\n    let themeColorsPack = greenThemeColors;\n\n    switch (localTheme) {\n      case RED_THEME:\n        themeColorsPack = redThemeColors;\n        break;\n      case YELLOW_THEME:\n        themeColorsPack = yellowThemeColors;\n        break;\n      case GREEN_THEME:\n        themeColorsPack = greenThemeColors;\n        break;\n      case BLUE_THEME:\n        themeColorsPack = blueThemeColors;\n        break;\n      default:\n        break;\n    }\n\n    changeTheme({ userTheme: localTheme, themeColors: themeColorsPack });\n  }\n\n  return (\n    <SimpleBar style={{ maxHeight: '100vh' }}>\n      <div className={styles.appContainer}>\n        <Header />\n        <RoutesContainer />\n        <Footer />\n      </div>\n    </SimpleBar>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { store } from 'redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"Header_appContainer__2tpm9\",\"container\":\"Header_container__29Cyd\",\"item\":\"Header_item__falKD\",\"active\":\"Header_active__10Kea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"CreatePasswordPage_appContainer__2IDgI\",\"container\":\"CreatePasswordPage_container__zYono\",\"description\":\"CreatePasswordPage_description__2sH61\",\"passwordContainer\":\"CreatePasswordPage_passwordContainer__1bPLg\",\"password\":\"CreatePasswordPage_password__3Qnmt\",\"buttonsContainer\":\"CreatePasswordPage_buttonsContainer__1sjp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"Checkbox_appContainer__13JQZ\",\"labelContainer\":\"Checkbox_labelContainer__3qQwz\",\"checkbox\":\"Checkbox_checkbox__2kVOT\",\"title\":\"Checkbox_title__2yBzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error404Page_container__3lnca\",\"errorText\":\"Error404Page_errorText__3bl3U\",\"linkText\":\"Error404Page_linkText__13zMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"ContactButton_appContainer__2Nc-u\",\"contactButton\":\"ContactButton_contactButton__3Mx89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__12VmU\",\"contactsContainer\":\"Footer_contactsContainer__24FEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeButton\":\"ThemeButton_themeButton__2mr8S\",\"redTheme\":\"ThemeButton_redTheme__LSv80\",\"yellowTheme\":\"ThemeButton_yellowTheme__2rPvp\",\"greenTheme\":\"ThemeButton_greenTheme__2qvOS\",\"blueTheme\":\"ThemeButton_blueTheme__y0SZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ThemeChangeBar_container__1acWy\",\"buttonsContainer\":\"ThemeChangeBar_buttonsContainer__1LHeW\"};"],"sourceRoot":""}