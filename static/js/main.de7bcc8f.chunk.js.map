{"version":3,"sources":["components/Footer/ContactButton/ContactButton.module.scss","components/Footer/Footer.module.scss","components/Header/Header.module.scss","components/common/Checkbox/Checkbox.module.scss","components/CreatePassword/Settings/Settings.module.scss","components/common/Button/Button.module.scss","App.module.scss","routes/routes.ts","components/Footer/ContactButton/ContactButton.tsx","components/Footer/Footer.tsx","components/Header/Header.tsx","components/common/ErrorPages/Error404.tsx","store/actions/createPasswordActions.ts","components/common/Checkbox/Checkbox.tsx","components/common/RangeSlider/RangeSlider.tsx","constants/common.ts","components/CreatePassword/Settings/Settings.tsx","components/common/Button/Button.tsx","components/CreatePassword/CreatePassword.tsx","components/RoutesContainer/RoutesContainer.tsx","components/common/ErrorPages/ErrorAll.tsx","App.tsx","reportWebVitals.ts","store/reducers/createPasswordReducer.ts","store/store.ts","index.tsx","components/CreatePassword/CreatePassword.module.scss"],"names":["module","exports","PATH","ContactButton","link","iconClass","className","s","contactButton","href","target","rel","contactButtonIcon","Footer","style","container","contactsContainer","Header","pageTitle","CREATE_PASSWORD_ACTIONS","Error404","to","CREATE_PASSWORD","Checkbox","onChange","onChangeChecked","children","checked","finalInputClassName","checkbox","labelContainer","type","e","currentTarget","RangeSlider","props","state","start","startValue","this","min","max","step","disabled","onUpdate","range","animate","connect","tooltips","value","Math","round","from","React","Component","numbersArr","symbolsArr","uppercaseLettersArr","lowercaseLettersArr","setCopiedStatus","status","SET_COPIED_STATUS","Settings","passwordLength","passwordUppercaseLetters","passwordLowercaseLetters","passwordNumbers","passwordSymbols","copiedStatus","dispatch","useDispatch","onUppercaseLettersChange","uppercaseLetters","CHANGE_UPPERCASE_LETTERS","onLowercaseLettersChange","lowercaseLetters","CHANGE_LOWERCASE_LETTERS","onNumbersChange","numbers","CHANGE_NUMBERS","onSymbolsChange","symbols","CHANGE_SYMBOLS","settingsContainer","length","Number","SET_LENGTH","Button","onClick","id","baseButton","CreatePassword","useSelector","createPassword","password","copied","result","passwordSymbolsProportion","maxPortionLength","floor","addPortion","arr","maxPortion","i","push","random","portion","randomMaxPortionLength","k","join","signSetsArr","onPasswordGenerateClick","newPassword","checkNewPasswordLength","slice","SET_PASSWORD","setPassword","useEffect","description","passwordContainer","buttonsContainer","navigator","clipboard","writeText","then","catch","error","console","log","RoutesContainer","path","element","ERROR","WRONG_PAGE","ErrorAll","textError","deleteMessageError","SET_ERROR_MESSAGE","setErrorMessage","setTimeout","App","globalContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialCreatePasswordState","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de7bcc8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"ContactButton_globalContainer__1Me2b\",\"contactButton\":\"ContactButton_contactButton__2UkqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__xGetM\",\"contactsContainer\":\"Footer_contactsContainer__1VuzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2vcM1\",\"pageTitle\":\"Header_pageTitle__3ER-j\",\"pageTitleActive\":\"Header_pageTitleActive__3JxMe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelContainer\":\"Checkbox_labelContainer__2YCAY\",\"checkbox\":\"Checkbox_checkbox__2rzMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsContainer\":\"Settings_settingsContainer__2VMaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseButton\":\"Button_baseButton__2ED6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalContainer\":\"App_globalContainer__2Tcf9\"};","export enum PATH {\r\n  CREATE_PASSWORD = '/',\r\n  RECOMMENDATIONS = 'recommendations',\r\n  ERROR = '404',\r\n  WRONG_PAGE = '*',\r\n}\r\n","import React from 'react';\r\n\r\nimport s from './ContactButton.module.scss';\r\n\r\ntype ContactButtonType = {\r\n  link: string;\r\n  iconClass: string;\r\n};\r\n\r\nexport const ContactButton: React.FC<ContactButtonType> = ({ link, iconClass }) => (\r\n  <a className={s.contactButton} href={link} target=\"_blank\" rel=\"noreferrer\">\r\n    <span className={`${s.contactButtonIcon} fab ${iconClass}`} />\r\n  </a>\r\n);\r\n","import React from 'react';\r\n\r\nimport { ContactButton } from './ContactButton/ContactButton';\r\nimport style from './Footer.module.scss';\r\n\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const Footer = (): ReturnComponentType => (\r\n  <div className={style.container}>\r\n    <div className={style.contactsContainer}>\r\n      <ContactButton\r\n        link=\"https://www.linkedin.com/in/ssivenkov\"\r\n        iconClass=\"fa-linkedin-in\"\r\n      />\r\n      <ContactButton link=\"https://t.me/sergei_sivenkov\" iconClass=\"fa-telegram\" />\r\n      <ContactButton link=\"https://github.com/ssivenkov\" iconClass=\"fa-github\" />\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport style from './Header.module.scss';\r\n\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const Header = (): ReturnComponentType => (\r\n  <div className={style.container}>\r\n    <div className={style.pageTitle}>Create password</div>\r\n  </div>\r\n);\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport { PATH } from 'routes/routes';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const Error404 = (): ReturnComponentType => (\r\n  <div>\r\n    <div>Error 404</div>\r\n    <div>\r\n      <NavLink to={PATH.CREATE_PASSWORD}>Back to home</NavLink>\r\n    </div>\r\n  </div>\r\n);\r\n","export enum CREATE_PASSWORD_ACTIONS {\r\n  SET_ERROR_MESSAGE = 'createPasswordReducer/SET-ERROR-MESSAGE',\r\n  SET_PASSWORD = 'createPasswordReducer/SET-PASSWORD',\r\n  SET_LENGTH = 'createPasswordReducer/SET-LENGTH',\r\n  CHANGE_UPPERCASE_LETTERS = 'createPasswordReducer/CHANGE-UPPERCASE-LETTERS',\r\n  CHANGE_LOWERCASE_LETTERS = 'createPasswordReducer/CHANGE-LOWERCASE-LETTERS',\r\n  CHANGE_NUMBERS = 'createPasswordReducer/CHANGE-NUMBERS',\r\n  CHANGE_SYMBOLS = 'createPasswordReducer/CHANGE-SYMBOLS',\r\n  SET_COPIED_STATUS = 'createPasswordReducer/SET-COPIED-STATUS',\r\n}\r\n\r\nexport type createPasswordActionsType =\r\n  | ReturnType<typeof setErrorMessage>\r\n  | ReturnType<typeof setPassword>\r\n  | ReturnType<typeof setLength>\r\n  | ReturnType<typeof changeUppercaseLetters>\r\n  | ReturnType<typeof changeLowercaseLetters>\r\n  | ReturnType<typeof changeNumbers>\r\n  | ReturnType<typeof changeSymbols>\r\n  | ReturnType<typeof setCopiedStatus>;\r\n\r\nexport const setErrorMessage = (error: boolean, textError: string) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.SET_ERROR_MESSAGE, error, textError } as const);\r\n\r\nexport const setPassword = (password: string) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.SET_PASSWORD, password } as const);\r\n\r\nexport const setLength = (length: number) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.SET_LENGTH, length } as const);\r\n\r\nexport const changeUppercaseLetters = (uppercaseLetters: boolean) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.CHANGE_UPPERCASE_LETTERS, uppercaseLetters } as const);\r\n\r\nexport const changeLowercaseLetters = (lowercaseLetters: boolean) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.CHANGE_LOWERCASE_LETTERS, lowercaseLetters } as const);\r\n\r\nexport const changeNumbers = (numbers: boolean) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.CHANGE_NUMBERS, numbers } as const);\r\n\r\nexport const changeSymbols = (symbols: boolean) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.CHANGE_SYMBOLS, symbols } as const);\r\n\r\nexport const setCopiedStatus = (status: boolean) =>\r\n  ({ type: CREATE_PASSWORD_ACTIONS.SET_COPIED_STATUS, status } as const);\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react';\r\n\r\nimport style from './Checkbox.module.scss';\r\n\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked: (checked: boolean) => void;\r\n};\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = ({\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  children,\r\n  checked,\r\n}): ReturnComponentType => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    if (onChange) {\r\n      onChange(e);\r\n    }\r\n    if (onChangeChecked) {\r\n      onChangeChecked(e.currentTarget.checked);\r\n    }\r\n  };\r\n\r\n  const finalInputClassName = `${style.checkbox} ${className || ''}`;\r\n\r\n  return (\r\n    // eslint-disable-next-line jsx-a11y/label-has-associated-control\r\n    <label className={style.labelContainer}>\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        checked={checked}\r\n      />\r\n      {children && <span>{children}</span>}\r\n    </label>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport './RangeSlider.scss';\r\nimport 'nouislider/dist/nouislider.css';\r\nimport Nouislider from 'nouislider-react';\r\n\r\ntype MapDispatchToPropsType = {\r\n  onUpdate: (value: Array<number>) => void;\r\n};\r\n\r\ntype MapStateToPropsType = {\r\n  startValue: number;\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  disabled: boolean;\r\n};\r\n\r\nexport type SuperDoubleRangePropsType = MapStateToPropsType & MapDispatchToPropsType;\r\n\r\ntype StateType = {\r\n  start: number;\r\n};\r\n\r\nexport class RangeSlider extends React.Component<SuperDoubleRangePropsType, StateType> {\r\n  constructor(props: SuperDoubleRangePropsType) {\r\n    super(props);\r\n    this.state = {\r\n      start: props.startValue,\r\n    };\r\n  }\r\n\r\n  render(): React.ReactElement {\r\n    const { min, max, step, disabled, onUpdate } = this.props;\r\n    const { start } = this.state;\r\n    return (\r\n      <span className=\"rangeSliderContainer\">\r\n        <Nouislider\r\n          range={{ min, max }}\r\n          start={start}\r\n          step={step}\r\n          disabled={disabled}\r\n          onUpdate={onUpdate}\r\n          animate={false}\r\n          connect\r\n          tooltips={[\r\n            {\r\n              to(value: number) {\r\n                return Math.round(value);\r\n              },\r\n              from(value: number) {\r\n                return Math.round(value);\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","export const EMPTY_STRING = '';\r\nexport const FIRST_ELEMENT = 0;\r\nexport const ZERO = 0;\r\nexport const ONE = 1;\r\nexport const TWO = 2;\r\nexport const THREE = 3;\r\nexport const FOUR = 4;\r\nexport const FIVE = 5;\r\nexport const SIX = 6;\r\nexport const SEVEN = 7;\r\nexport const EIGHT = 8;\r\nexport const NINE = 9;\r\nexport const HUNDRED = 100;\r\n\r\nexport const numbersArr = [ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE];\r\nexport const symbolsArr = [\r\n  '!',\r\n  '?',\r\n  '*',\r\n  '@',\r\n  '#',\r\n  '$',\r\n  '%',\r\n  '&',\r\n  '.',\r\n  ':',\r\n  '_',\r\n  '-',\r\n  '+',\r\n  '=',\r\n  '~',\r\n  '^',\r\n  '<',\r\n  '>',\r\n  '(',\r\n  ')',\r\n  '[',\r\n  ']',\r\n  '{',\r\n  '}',\r\n];\r\nexport const uppercaseLettersArr = [\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n  'M',\r\n  'N',\r\n  'O',\r\n  'P',\r\n  'Q',\r\n  'R',\r\n  'S',\r\n  'T',\r\n  'U',\r\n  'V',\r\n  'W',\r\n  'X',\r\n  'Y',\r\n  'Z',\r\n];\r\nexport const lowercaseLettersArr = [\r\n  'a',\r\n  'b',\r\n  'c',\r\n  'd',\r\n  'e',\r\n  'f',\r\n  'g',\r\n  'h',\r\n  'i',\r\n  'j',\r\n  'k',\r\n  'l',\r\n  'm',\r\n  'n',\r\n  'o',\r\n  'p',\r\n  'q',\r\n  'r',\r\n  's',\r\n  't',\r\n  'u',\r\n  'v',\r\n  'w',\r\n  'x',\r\n  'y',\r\n  'z',\r\n];\r\n","import { FC } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport style from './Settings.module.scss';\r\n\r\nimport { Checkbox } from 'components/common/Checkbox/Checkbox';\r\nimport { RangeSlider } from 'components/common/RangeSlider/RangeSlider';\r\nimport { FIRST_ELEMENT, ONE, EIGHT, HUNDRED } from 'constants/common';\r\nimport {\r\n  changeUppercaseLetters,\r\n  changeLowercaseLetters,\r\n  changeNumbers,\r\n  changeSymbols,\r\n  setCopiedStatus,\r\n  setLength,\r\n} from 'store/actions/createPasswordActions';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\ntype SettingsType = {\r\n  passwordLength: number;\r\n  passwordUppercaseLetters: boolean;\r\n  passwordLowercaseLetters: boolean;\r\n  passwordNumbers: boolean;\r\n  passwordSymbols: boolean;\r\n  copiedStatus: boolean;\r\n};\r\n\r\nexport const Settings: FC<SettingsType> = ({\r\n  passwordLength,\r\n  passwordUppercaseLetters,\r\n  passwordLowercaseLetters,\r\n  passwordNumbers,\r\n  passwordSymbols,\r\n  copiedStatus,\r\n}): ReturnComponentType => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onRangeUpdate = (value: Array<number>): void => {\r\n    dispatch(setCopiedStatus(false));\r\n    dispatch(setLength(Math.round(Number(value[FIRST_ELEMENT]))));\r\n  };\r\n\r\n  const onUppercaseLettersChange = (): void => {\r\n    if (copiedStatus) dispatch(setCopiedStatus(false));\r\n    dispatch(changeUppercaseLetters(!passwordUppercaseLetters));\r\n  };\r\n\r\n  const onLowercaseLettersChange = (): void => {\r\n    if (copiedStatus) dispatch(setCopiedStatus(false));\r\n    dispatch(changeLowercaseLetters(!passwordLowercaseLetters));\r\n  };\r\n\r\n  const onNumbersChange = (): void => {\r\n    if (copiedStatus) dispatch(setCopiedStatus(false));\r\n    dispatch(changeNumbers(!passwordNumbers));\r\n  };\r\n\r\n  const onSymbolsChange = (): void => {\r\n    if (copiedStatus) dispatch(setCopiedStatus(false));\r\n    dispatch(changeSymbols(!passwordSymbols));\r\n  };\r\n\r\n  return (\r\n    <div className={style.settingsContainer}>\r\n      <div>Settings</div>\r\n      <div>\r\n        <RangeSlider\r\n          startValue={EIGHT}\r\n          min={EIGHT}\r\n          max={HUNDRED}\r\n          step={ONE}\r\n          disabled={false}\r\n          onUpdate={onRangeUpdate}\r\n        />\r\n        <span>length: {passwordLength}</span>\r\n        <div>\r\n          <Checkbox\r\n            onChangeChecked={() => onUppercaseLettersChange()}\r\n            checked={passwordUppercaseLetters}\r\n          >\r\n            Uppercase letters: {`${passwordUppercaseLetters}`}\r\n          </Checkbox>\r\n        </div>\r\n        <div>\r\n          <Checkbox\r\n            onChangeChecked={() => onLowercaseLettersChange()}\r\n            checked={passwordLowercaseLetters}\r\n          >\r\n            Lowercase letters: {`${passwordLowercaseLetters}`}\r\n          </Checkbox>\r\n        </div>\r\n        <div>\r\n          <Checkbox onChangeChecked={() => onNumbersChange()} checked={passwordNumbers}>\r\n            Numbers: {`${passwordNumbers}`}\r\n          </Checkbox>\r\n        </div>\r\n        <div>\r\n          <Checkbox onChangeChecked={() => onSymbolsChange()} checked={passwordSymbols}>\r\n            Symbols: {`${passwordSymbols}`}\r\n          </Checkbox>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\r\n\r\nimport style from './Button.module.scss';\r\n\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\nexport type ButtonType = DefaultButtonPropsType & {\r\n  title?: string;\r\n  className?: string;\r\n  condition?: boolean;\r\n  id?: string;\r\n};\r\n\r\nexport const Button: React.FC<ButtonType> = ({\r\n  children,\r\n  className,\r\n  onClick,\r\n  type,\r\n  disabled,\r\n  id,\r\n}): ReturnComponentType => (\r\n  <button\r\n    id={id}\r\n    /* eslint-disable-next-line react/button-has-type */\r\n    type={type}\r\n    className={`${className || style.baseButton}`}\r\n    onClick={onClick}\r\n    disabled={disabled}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n","import { useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport style from './CreatePassword.module.scss';\r\nimport { Settings } from './Settings/Settings';\r\n\r\nimport { Button } from 'components/common/Button/Button';\r\nimport {\r\n  ZERO,\r\n  ONE,\r\n  TWO,\r\n  uppercaseLettersArr,\r\n  lowercaseLettersArr,\r\n  numbersArr,\r\n  symbolsArr,\r\n} from 'constants/common';\r\nimport { setCopiedStatus, setPassword } from 'store/actions/createPasswordActions';\r\nimport { AppRootStateType } from 'store/store';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const CreatePassword = (): ReturnComponentType => {\r\n  const dispatch = useDispatch();\r\n\r\n  const passwordLength = useSelector<AppRootStateType, number>(\r\n    state => state.createPassword.length,\r\n  );\r\n  const passwordUppercaseLetters = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.uppercaseLetters,\r\n  );\r\n  const passwordLowercaseLetters = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.lowercaseLetters,\r\n  );\r\n  const passwordNumbers = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.numbers,\r\n  );\r\n  const passwordSymbols = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.symbols,\r\n  );\r\n  const password = useSelector<AppRootStateType, string>(\r\n    state => state.createPassword.password,\r\n  );\r\n  const copiedStatus = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.copied,\r\n  );\r\n\r\n  let result = '';\r\n  const maxSameSignTypeRepeatCount = TWO;\r\n  const passwordSymbolsProportion =\r\n    Number(passwordUppercaseLetters) +\r\n    Number(passwordLowercaseLetters) +\r\n    Number(passwordNumbers) +\r\n    Number(passwordSymbols);\r\n  const maxPortionLength = Math.floor(passwordLength / passwordSymbolsProportion);\r\n\r\n  /**\r\n   * adds a random number of random character types to the result variable.\r\n   * @param {Array} arr array of characters of the same type to form a fragment.\r\n   * @return {void} void.\r\n   * */\r\n  const addPortion = (arr: Array<number | string>): void => {\r\n    const maxPortion: Array<number | string> = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < maxPortionLength; i++) {\r\n      maxPortion.push(arr[Math.floor(Math.random() * arr.length)]);\r\n    }\r\n    const portion: Array<number | string> = [];\r\n    const randomMaxPortionLength =\r\n      Math.floor(Math.random() * maxSameSignTypeRepeatCount) + ONE;\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let k = 0; k < randomMaxPortionLength; k++) {\r\n      portion.push(maxPortion[Math.floor(Math.random() * maxPortion.length)]);\r\n    }\r\n    result += portion.join('');\r\n  };\r\n\r\n  const signSetsArr: Array<any> = [];\r\n  const fillingSignSetsArr = (): void => {\r\n    if (passwordUppercaseLetters) signSetsArr.push(uppercaseLettersArr);\r\n    if (passwordLowercaseLetters) signSetsArr.push(lowercaseLettersArr);\r\n    if (passwordNumbers) signSetsArr.push(numbersArr);\r\n    if (passwordSymbols) signSetsArr.push(symbolsArr);\r\n  };\r\n  fillingSignSetsArr();\r\n\r\n  const generatePassword = (): string => {\r\n    addPortion(signSetsArr[Math.floor(Math.random() * signSetsArr.length)]);\r\n    const checkNewPasswordLength = (): void => {\r\n      addPortion(signSetsArr[Math.floor(Math.random() * signSetsArr.length)]);\r\n      if (result.length < passwordLength) {\r\n        checkNewPasswordLength();\r\n      }\r\n    };\r\n    checkNewPasswordLength();\r\n    result = result.slice(ZERO, passwordLength);\r\n    return result;\r\n  };\r\n\r\n  const onPasswordGenerateClick = (): void => {\r\n    if (copiedStatus) dispatch(setCopiedStatus(false));\r\n    const newPassword = generatePassword();\r\n    dispatch(setPassword(newPassword));\r\n  };\r\n\r\n  const onCopyPasswordClick = (): void => {\r\n    navigator.clipboard\r\n      .writeText(password)\r\n      .then(() => {\r\n        dispatch(setCopiedStatus(true));\r\n      })\r\n      .catch(error => {\r\n        console.log(`Error copying password: ${error}`);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    onPasswordGenerateClick();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.description}>\r\n        Generate secure, random passwords to stay safe online\r\n      </div>\r\n      <div className={style.passwordContainer}>\r\n        <div className={style.password}>{password}</div>\r\n      </div>\r\n      <div className={style.buttonsContainer}>\r\n        <Button onClick={() => onPasswordGenerateClick()}>Generate</Button>\r\n        <Button onClick={() => onCopyPasswordClick()}>\r\n          {copiedStatus ? <span>Copied to clipboard</span> : <span>Copy password</span>}\r\n        </Button>\r\n      </div>\r\n      <Settings\r\n        passwordLength={passwordLength}\r\n        passwordUppercaseLetters={passwordUppercaseLetters}\r\n        passwordLowercaseLetters={passwordLowercaseLetters}\r\n        passwordNumbers={passwordNumbers}\r\n        passwordSymbols={passwordSymbols}\r\n        copiedStatus={copiedStatus}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\n\r\nimport { Error404 } from 'components/common/ErrorPages/Error404';\r\nimport { CreatePassword } from 'components/CreatePassword/CreatePassword';\r\nimport { PATH } from 'routes/routes';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const RoutesContainer = (): ReturnComponentType => (\r\n  <div>\r\n    <Routes>\r\n      <Route path={PATH.CREATE_PASSWORD} element={<CreatePassword />} />\r\n      <Route path={PATH.ERROR} element={<Error404 />} />\r\n      <Route path={PATH.WRONG_PAGE} element={<Navigate to={PATH.ERROR} />} />\r\n    </Routes>\r\n  </div>\r\n);\r\n","import { useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { PATH } from '../../../routes/routes';\r\n\r\nimport { setErrorMessage } from 'store/actions/createPasswordActions';\r\nimport { AppRootStateType } from 'store/store';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const ErrorAll = (): ReturnComponentType => {\r\n  const error = useSelector<AppRootStateType, boolean>(\r\n    state => state.createPassword.error,\r\n  );\r\n  const textError = useSelector<AppRootStateType, string>(\r\n    state => state.createPassword.textError,\r\n  );\r\n  const dispatch = useDispatch();\r\n  const deleteMessageError = (): any => dispatch(setErrorMessage(false, ''));\r\n  const time = 3000;\r\n  useEffect(() => {\r\n    setTimeout(deleteMessageError, time);\r\n  }, [error]);\r\n\r\n  return (\r\n    <div>\r\n      {error && (\r\n        <div>\r\n          <h1>Error:</h1>\r\n          <h2>{textError}</h2>\r\n          <div>\r\n            <NavLink to={PATH.CREATE_PASSWORD}>Back to home</NavLink>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { Footer } from './components/Footer/Footer';\r\nimport { Header } from './components/Header/Header';\r\nimport { RoutesContainer } from './components/RoutesContainer/RoutesContainer';\r\n\r\nimport 'Null.module.scss';\r\nimport style from 'App.module.scss';\r\nimport { ErrorAll } from 'components/common/ErrorPages/ErrorAll';\r\nimport { ReturnComponentType } from 'types/ReturnComponentType';\r\n\r\nexport const App: FC = (): ReturnComponentType => (\r\n  <div className={style.globalContainer}>\r\n    <ErrorAll />\r\n    <Header />\r\n    <RoutesContainer />\r\n    <Footer />\r\n  </div>\r\n);\r\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { EIGHT, EMPTY_STRING } from 'constants/common';\r\nimport {\r\n  CREATE_PASSWORD_ACTIONS,\r\n  createPasswordActionsType,\r\n} from 'store/actions/createPasswordActions';\r\n\r\nconst initialCreatePasswordState = {\r\n  password: EMPTY_STRING,\r\n  length: EIGHT,\r\n  uppercaseLetters: false,\r\n  lowercaseLetters: true,\r\n  numbers: true,\r\n  symbols: false,\r\n  error: false,\r\n  textError: EMPTY_STRING,\r\n  copied: false,\r\n};\r\n\r\nexport type InitialCreatePasswordStateType = typeof initialCreatePasswordState;\r\n\r\nexport const createPasswordReducer = (\r\n  state: InitialCreatePasswordStateType = initialCreatePasswordState,\r\n  action: createPasswordActionsType,\r\n): InitialCreatePasswordStateType => {\r\n  switch (action.type) {\r\n    case CREATE_PASSWORD_ACTIONS.SET_ERROR_MESSAGE:\r\n      return { ...state, error: action.error, textError: action.textError };\r\n    case CREATE_PASSWORD_ACTIONS.SET_PASSWORD:\r\n      return { ...state, password: action.password };\r\n    case CREATE_PASSWORD_ACTIONS.SET_LENGTH:\r\n      return { ...state, length: action.length };\r\n    case CREATE_PASSWORD_ACTIONS.CHANGE_UPPERCASE_LETTERS:\r\n      return { ...state, uppercaseLetters: action.uppercaseLetters };\r\n    case CREATE_PASSWORD_ACTIONS.CHANGE_LOWERCASE_LETTERS:\r\n      return { ...state, lowercaseLetters: action.lowercaseLetters };\r\n    case CREATE_PASSWORD_ACTIONS.CHANGE_NUMBERS:\r\n      return { ...state, numbers: action.numbers };\r\n    case CREATE_PASSWORD_ACTIONS.CHANGE_SYMBOLS:\r\n      return { ...state, symbols: action.symbols };\r\n    case CREATE_PASSWORD_ACTIONS.SET_COPIED_STATUS:\r\n      return { ...state, copied: action.status };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\r\nimport thunk, { ThunkAction } from 'redux-thunk';\r\n\r\nimport { createPasswordActionsType } from './actions/createPasswordActions';\r\nimport { createPasswordReducer } from './reducers/createPasswordReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  createPassword: createPasswordReducer,\r\n});\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\nexport type AppActionsType = createPasswordActionsType;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  AppRootStateType,\r\n  unknown,\r\n  AppActionsType\r\n>;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { store } from 'store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreatePassword_container__ngEsC\",\"description\":\"CreatePassword_description__1HXeZ\",\"passwordContainer\":\"CreatePassword_passwordContainer__1bYuP\",\"password\":\"CreatePassword_password__1bhGF\",\"buttonsContainer\":\"CreatePassword_buttonsContainer__34jJK\"};"],"sourceRoot":""}